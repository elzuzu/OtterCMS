#!/bin/sh
# Validate patches before sending via git send-email
# This script is intended to replace .git/hooks/sendemail-validate

validate_cover_letter() {
    file="$1"
    if grep -qi "TODO" "$file"; then
        echo "Cover letter contains TODOs" >&2
        return 1
    fi
}

validate_patch() {
    file="$1"
    git am -3 "$file" || return
    if grep -q "console\.log" "$file"; then
        echo "Patch contains console.log statements" >&2
        return 1
    fi
    if grep -qi "TODO" "$file"; then
        echo "Patch contains TODO markers" >&2
        return 1
    fi
}

validate_series() {
    cargo fmt --all -- --check || return
}

# main -------------------------------------------------------------------------
if test "$GIT_SENDEMAIL_FILE_COUNTER" = 1; then
    remote=$(git config --default origin --get sendemail.validateRemote)
    ref=$(git config --default HEAD --get sendemail.validateRemoteRef)
    worktree=$(mktemp --tmpdir -d sendemail-validate.XXXXXXX) &&
    git worktree add -fd --checkout "$worktree" "refs/remotes/$remote/$ref" &&
    git config --replace-all sendemail.validateWorktree "$worktree" || {
        echo "sendemail-validate: error: failed to prepare worktree" >&2
        exit 1
    }
else
    worktree=$(git config --get sendemail.validateWorktree)
fi

unset GIT_DIR GIT_WORK_TREE
cd "$worktree" || exit 1

if grep -q "^diff --git " "$1"; then
    validate_patch "$1"
else
    validate_cover_letter "$1"
fi || exit 1

if test "$GIT_SENDEMAIL_FILE_COUNTER" = "$GIT_SENDEMAIL_FILE_TOTAL"; then
    git config --unset-all sendemail.validateWorktree
    trap 'git worktree remove -ff "$worktree"' EXIT
    validate_series || exit 1
fi
